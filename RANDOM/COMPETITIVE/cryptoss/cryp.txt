def digit(base, exponent)
  [
    0, 0, 0, 0,
    1, 1, 1, 1,
    6, 2, 4, 8,
    1, 3, 9, 7,
    6, 4, 6, 4,
    5, 5, 5, 5,
    6, 6, 6, 6,
    1, 7, 9, 3,
    6, 8, 4, 2,
    1, 9, 1, 9
  ][(base % 10) * 4 + (exponent % 4)]
end

t=gets;
my=gets;
k=gets;
#n = 20122013 ** 5000

while $t > 0 do 
  puts digit(my,k) 
end

    
def last_digit(n1, n2):
    if n2 == 0:
        return 1

    cycle = [n1 % 10]
    while True:
        nxt = (cycle[-1] * n1) % 10
        if nxt == cycle[0]:
            break
        cycle.append(nxt)
    return cycle[(n2 - 1) % len(cycle)]

