#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <utility>
#include <list>
#include <memory>
using namespace std;


const long modularizer = 7 + 1e9;

long p[2][9][65];


long calcGraph(int m,int n, int k) {
    
    int r = min(m,n);
    int c = max(m,n);
    int prod = r*c;
    
    long kl = (long) k;
    long pwr = 1;
    long tot = 0;
    
    for (int i=1 ; i<=prod ; i++) {
        pwr *= kl;
        pwr %= modularizer;
        tot += p[r][c][i] * pwr;
        tot %= modularizer;
    }
    
    while (tot<0) tot+=modularizer;
    
    return tot;
}

int main() {

    for (int i=0; i<2 ; ++i)
        for (int j=0; j<8 ; ++j)
            for (int z=0; z<65 ; ++z)
                p[i][j][z] = 0;
            
            


p[2][2][1]=-3;p[2][2][2]=6;p[2][2][3]=-4;p[2][2][4]=1;

p[2][3][1]=-9;p[2][3][2]=27;p[2][3][3]=-33;p[2][3][4]=21;p[2][3][5]=-7;
p[2][3][6]=1;

p[2][4][1]=-27;p[2][4][2]=108;p[2][4][3]=-189;p[2][4][4]=189;p[2][4][5]=-117;
p[2][4][6]=45;p[2][4][7]=-10;p[2][4][8]=1;

p[2][5][1]=-81;p[2][5][2]=405;p[2][5][3]=-918;p[2][5][4]=1242;p[2][5][5]=-1107;
p[2][5][6]=675;p[2][5][7]=-282;p[2][5][8]=78;p[2][5][9]=-13;p[2][5][10]=1;


p[2][6][1]=-243;p[2][6][2]=1458;p[2][6][3]=-4050;p[2][6][4]=6885;p[2][6][5]=-7965;
p[2][6][6]=6588;p[2][6][7]=-3978;p[2][6][8]=1755;p[2][6][9]=-555;p[2][6][10]=120;
p[2][6][11]=-16;p[2][6][12]=1;

p[2][7][1]=-729;p[2][7][2]=5103;p[2][7][3]=-16767;p[2][7][4]=34263;p[2][7][5]=-48600;
p[2][7][6]=50544;p[2][7][7]=-39663;p[2][7][8]=23787;p[2][7][9]=-10908;p[2][7][10]=3780;
p[2][7][11]=-963;p[2][7][12]=171;p[2][7][13]=-19;p[2][7][14]=1;

p[2][8][1]=-2187;p[2][8][2]=17496;p[2][8][3]=-66339;p[2][8][4]=158193;p[2][8][5]=-265356;
p[2][8][6]=331695;p[2][8][7]=-319221;p[2][8][8]=240894;p[2][8][9]=-143748;p[2][8][10]=67851;
p[2][8][11]=-25137;p[2][8][12]=7182;p[2][8][13]=-1533;p[2][8][14]=231;p[2][8][15]=-22;
p[2][8][16]=1;



    int t;
    int  m, k;
 cin >> t;
 for (int i=0 ; i<t ; i++) {
        cin >> n >> k;
        cout << calcGraph(2, n, k) << endl;
    }
    
    return 0;
}